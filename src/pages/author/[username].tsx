import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { GetStaticProps, type NextPage } from "next";
import Head from "next/head";
import { DateTime } from "luxon";
import { api, RouterOutputs } from "~/utils/api";
import { generateSSGHelper } from "~/server/helpers/ssgHelper";
import Link from "next/link";

type AuthedUserPosts = RouterOutputs["posts"]["getAllByUsername"];

const UserPage: NextPage<{ username: string }> = ({ username }) => {
  const { data } = api.posts.getAllByUsername.useQuery({
    username,
  });

  return (
    <>
      <Head>
        <title>My Journal</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" min-h-screen ">
        <div className="h-[10vh] w-full bg-cyan-200">
          <div className="mx-auto max-w-7xl px-6">
            <p>{data?.formatedUser.username}</p>
            <p>
              {DateTime.fromMillis(
                data?.formatedUser.joinedDate as number
              ).toFormat("DDD")}
            </p>
          </div>
        </div>
        <div className="grid grid-cols-3 gap-6">
          {data?.userPosts.map((post) => (
            <Link
              href={`/journal/post/${post.id}`}
              key={post.id}
              className="rounded-xl bg-neutral-200 p-4"
            >
              <p>{post.title}</p>
              <p>CREATEDAT</p>
            </Link>
          ))}
        </div>
      </main>
    </>
  );
};

export const getStaticProps: GetStaticProps = async (context) => {
  const ssg = generateSSGHelper();

  const username = context.params?.username;
  if (typeof username !== "string") throw new Error("no slug");

  await ssg.posts.getAllByUsername.prefetch({ username });

  return {
    props: { trpcState: ssg.dehydrate(), username },
  };
};

export const getStaticPaths = () => {
  return { paths: [], fallback: "blocking" };
};

export default UserPage;
