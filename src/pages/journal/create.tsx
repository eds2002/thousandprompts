import { useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import { api } from "~/utils/api";
import dynamic from "next/dynamic";
import EditorComponent from "~/components/ui/Tiptap";
import Tiptap from "~/components/ui/Tiptap";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>My Journal</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        <p>Create journal</p>
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <JournalBox />
        </div>
      </main>
    </>
  );
};

const JournalBox = () => {
  const { isSignedIn, user } = useUser();
  const { mutate, isLoading: isPublishing } = api.posts.create.useMutation({
    onSuccess: () => {
      // void ctx.posts.getAll.invalidate();
      console.log("success");
      alert("redirect back to journal");
    },
    onError: (e) => {
      const errorMessage = e.data?.zodError?.fieldErrors.content;
      if (errorMessage && errorMessage[0]) {
        alert(errorMessage[0]);
      } else {
        console.log(errorMessage);
        alert("Failed to post! Please try again later");
      }
    },
  });
  // const handleSubmit = (e: FormEvent<HTMLFormElement>) => {
  //   e.preventDefault();
  //   const content = e.target.content.value;
  //   const title = e.target.title.value;
  //   if (content === "" || title === "") return;
  //   mutate({ content, published: true, title });
  // };

  return <Tiptap />;
};

export default Home;
